USE
testdb;

DROP TABLE IF EXISTS STOCK_PRICE;
DROP TABLE IF EXISTS NEWS_COMPANY;
DROP TABLE IF EXISTS SUPPLY_CHAIN;
DROP TABLE IF EXISTS BRANCH_META;
DROP TABLE IF EXISTS COMPANY_DIVISION;
DROP TABLE IF EXISTS COMPANY_META;
DROP TABLE IF EXISTS NEWS_SENTIMENT;
DROP TABLE IF EXISTS NEWS_MAIN;
DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS RISK;


-- COMPANY_META
CREATE TABLE COMPANY_META
(
    COMPANY_CODE VARCHAR(12) PRIMARY KEY,
    COMPANY_NAME VARCHAR(100) NOT NULL,
    COUNTRY      VARCHAR(10)  NOT NULL,
    SECTOR       VARCHAR(50)  NOT NULL
);

-- COMPANY_DIVISION
CREATE TABLE COMPANY_DIVISION
(
    DIVISION_CODE VARCHAR(11) PRIMARY KEY,
    DIVISION_NAME VARCHAR(100) NOT NULL,
    COMPANY_CODE  VARCHAR(12)  NOT NULL,
    FOREIGN KEY (COMPANY_CODE) REFERENCES COMPANY_META (COMPANY_CODE)
);

-- BRANCH_META 테이블
CREATE TABLE BRANCH_META
(
    SCM_KEY       VARCHAR(15) PRIMARY KEY,
    SCM_NAME      VARCHAR(100) NOT NULL,
    DIVISION_CODE VARCHAR(11)  NOT NULL,
    FOREIGN KEY (DIVISION_CODE) REFERENCES COMPANY_DIVISION (DIVISION_CODE)
);

-- SUPPLY_CHAIN 테이블
CREATE TABLE SUPPLY_CHAIN
(
    SCM_IDX  INT AUTO_INCREMENT PRIMARY KEY,
    SCM_KEY  VARCHAR(15) NOT NULL,
    PRODUCT  VARCHAR(100),
    RATIO    DECIMAL(7, 4),
    LOC_NAME VARCHAR(255),
    ISO      CHAR(2),
    ADDRESS  VARCHAR(255),
    STATE    VARCHAR(100),
    LAT      DECIMAL(10, 8),
    LON      DECIMAL(11, 8),
    FOREIGN KEY (SCM_KEY) REFERENCES BRANCH_META (SCM_KEY)
);

-- CUSTOMER 테이블
CREATE TABLE CUSTOMER
(
    USER_ID   VARCHAR(100) PRIMARY KEY,
    USER_NAME VARCHAR(100) NOT NULL,
    PASSWORD  VARCHAR(255) NOT NULL,
    MOBILE    VARCHAR(50)  NOT NULL,
    EMAIL     VARCHAR(100) NOT NULL
);


-- NEWS_MAIN 테이블
CREATE TABLE NEWS_MAIN
(
    NEWS_ID  INT AUTO_INCREMENT PRIMARY KEY,
    TITLE    VARCHAR(255) NOT NULL,
    CONTENT  TEXT         NOT NULL,
    PUB_DATE TIMESTAMP    NOT NULL,
    SOURCE   VARCHAR(100) NOT NULL,
    NEWS_API VARCHAR(255) NOT NULL
);

-- NEWS_COMPANY 테이블
CREATE TABLE NEWS_COMPANY
(
    NEWS_ID      INT,
    COMPANY_CODE VARCHAR(12),
    PRIMARY KEY (NEWS_ID, COMPANY_CODE),
    FOREIGN KEY (NEWS_ID)
        REFERENCES NEWS_MAIN (NEWS_ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    FOREIGN KEY (COMPANY_CODE)
        REFERENCES COMPANY_META (COMPANY_CODE)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);

-- NEWS_SENTIMENT 테이블
CREATE TABLE NEWS_SENTIMENT
(
    NEWS_ID           INT PRIMARY KEY,
    SENTIMENT         DECIMAL(7, 4) NOT NULL,
    POSITIVE_KEYWORDS TEXT,
    NEGATIVE_KEYWORDS TEXT,
    PUB_DATE          TIMESTAMP     NOT NULL,
    FOREIGN KEY (NEWS_ID)
        REFERENCES NEWS_MAIN (NEWS_ID)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);


-- RISK 테이블
CREATE TABLE RISK
(
    RISK_IDX        INT AUTO_INCREMENT PRIMARY KEY,
    MODEL_NAME      VARCHAR(50)   NOT NULL,
    ANALYSIS_RESULT VARCHAR(255)  NOT NULL,
    TEST_DATE       DATE          NOT NULL,
    PREDICT_DATE    DATE          NOT NULL,
    RISK_SCORE      DECIMAL(7, 4) NOT NULL
);


-- STOCK_PRICE 테이블
CREATE TABLE STOCK_PRICE
(
    COMPANY_CODE VARCHAR(12)    NOT NULL,
    DATE         TIMESTAMP      NOT NULL,
    OPEN         DECIMAL(12, 4) NOT NULL,
    HIGH         DECIMAL(12, 4) NOT NULL,
    LOW          DECIMAL(12, 4) NOT NULL,
    CLOSE        DECIMAL(12, 4) NOT NULL,
    VOLUME       BIGINT UNSIGNED NOT NULL,
    PRIMARY KEY (COMPANY_CODE, DATE),
    FOREIGN KEY (COMPANY_CODE) REFERENCES COMPANY_META (COMPANY_CODE)
);